[
  {
    "key": "ctrl+shift+alt+h",
    "command": "editor.action.showDefinitionPreviewHover",
    "when": "editorTextFocus"
  },
  {
    "key": "alt+left",
    "command": "workbench.action.navigateBack",
    "when": "canNavigateBack"
  },
  {
    "key": "alt+right",
    "command": "workbench.action.navigateForward",
    "when": "canNavigateForward"
  },
  {
    "key": "alt+down",
    "command": "editor.action.moveLinesDownAction",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "alt+up",
    "command": "editor.action.moveLinesUpAction",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "ctrl+t",
    "command": "editor.action.refactor",
    "when": "!isMac && (editorHasCodeActionsProvider && textInputFocus && !editorReadonly)"
  },
  {
    "key": "cmd+t",
    "command": "editor.action.refactor",
    "when": "isMac && editorHasCodeActionsProvider && textInputFocus && !editorReadonly)"
  },
  {
    "key": "ctrl+y",
    "command": "workbench.action.switchWindow",
    "when": "!isMac"
  },
  {
    "key": "cmd+y",
    "command": "workbench.action.switchWindow",
    "when": "!isMac"
  },
  {
    "key": "ctrl+r",
    "command": "editor.action.codeAction",
    "args": {
      "kind": "refactor.extract.function"
    },
    "when": "!isMac"
  },
  {
    "key": "cmd+r",
    "command": "editor.action.codeAction",
    "args": {
      "kind": "refactor.extract.function"
    },
    "when": "isMac"
  },
  {
    "key": "ctrl+shift+e",
    "command": "workbench.action.toggleSidebarVisibility",
    "when": "!isMac && sideBarFocus"
  },
  {
    "key": "cmd+shift+e",
    "command": "workbench.action.toggleSidebarVisibility",
    "when": "isMac && sideBarFocus"
  },
  {
    "key": "ctrl+b",
    "command": "-workbench.action.toggleSidebarVisibility",
    "when": "!isMac"
  },
  {
    "key": "cmd+b",
    "command": "-workbench.action.toggleSidebarVisibility",
    "when": "isMac"
  },
  {
    "key": "ctrl+b",
    "command": "editor.action.goToImplementation",
    "when": "!isMac && (editorHasDefinitionProvider && editorTextFocus && !isInEmbeddedEditor)"
  },
  {
    "key": "cmd+b",
    "command": "editor.action.goToImplementation",
    "when": "isMac && (editorHasDefinitionProvider && editorTextFocus && !isInEmbeddedEditor)"
  },
  {
    "key": "ctrl+shift+b",
    "command": "editor.action.goToReferences",
    "when": "!isMac && (editorHasDefinitionProvider && editorTextFocus && !isInEmbeddedEditor)"
  },
  {
    "key": "cmd+shift+b",
    "command": "editor.action.goToReferences",
    "when": "isMac && (editorHasDefinitionProvider && editorTextFocus && !isInEmbeddedEditor)"
  },
  {
    "key": "ctrl+d",
    "command": "workbench.action.terminal.split",
    "when": "!isMac && (terminalFocus && terminalProcessSupported)"
  },
  {
    "key": "cmd+d",
    "command": "workbench.action.terminal.split",
    "when": "isMac && (terminalFocus && terminalProcessSupported)"
  },
  {
    "comment": "Kill terminal",
    "key": "ctrl+w",
    "command": "workbench.action.terminal.kill",
    "when": "!isMac && (terminalFocus && terminalProcessSupported && !terminalEditorFocus)"
  },
  {
    "comment": "Kill terminal",
    "key": "cmd+w",
    "command": "workbench.action.terminal.kill",
    "when": "isMac && (terminalFocus && terminalProcessSupported && !terminalEditorFocus)"
  },
  {
    "comment": "Kill terminal instance",
    "key": "ctrl+w",
    "command": "workbench.action.terminal.killInstance",
    "when": "!isMac && (terminalIsOpen && terminalTabsFocus || terminalProcessSupported && terminalTabsFocus)"
  },
  {
    "comment": "Kill terminal instance",
    "key": "cmd+w",
    "command": "workbench.action.terminal.killInstance",
    "when": "isMac && (terminalIsOpen && terminalTabsFocus || terminalProcessSupported && terminalTabsFocus)"
  },
  {
    "comment": "Kill terminal from editor",
    "key": "ctrl+w",
    "command": "workbench.action.terminal.kill",
    "when": "!isMac && terminalEditorFocus"
  },
  {
    "comment": "Kill terminal from editor",
    "key": "cmd+w",
    "command": "workbench.action.terminal.kill",
    "when": "isMac && terminalEditorFocus"
  },
  {
    "comment": "Toggle maximize terminal",
    "key": "ctrl+shift+alt+m",
    "command": "workbench.action.toggleMaximizedPanel"
  },
  {
    "comment": "Move terminal to the next terminal",
    "key": "ctrl+shift+alt+r",
    "command": "workbench.action.terminal.focusNext",
    "when": "terminalFocus"
  },
  {
    "comment": "Move to the previous terminal",
    "key": "ctrl+shift+alt+e",
    "command": "workbench.action.terminal.focusPrevious",
    "when": "terminalFocus"
  },
  {
    "comment": "New terminal",
    "key": "ctrl+shift+alt+t",
    "command": "workbench.action.terminal.new"
  },
  {
    "comment": "Focus from editor to terminal",
    "key": "ctrl+shift+alt+j",
    "command": "workbench.action.terminal.focus"
  },
  {
    "comment": "Focus from termianal to editor",
    "key": "ctrl+shift+alt+j",
    "command": "workbench.action.focusActiveEditorGroup",
    "when": "terminalFocus"
  },
  {
    "comment": "Move tab to next group",
    "key": "ctrl+shift+alt+left",
    "command": "workbench.action.moveEditorToPreviousGroup"
  },
  {
    "comment": "Move tab to previous group",
    "key": "ctrl+shift+alt+right",
    "command": "workbench.action.moveEditorToNextGroup"
  },
  {
    "comment": "Move tab to above group",
    "key": "ctrl+shift+alt+up",
    "command": "workbench.action.moveEditorToAboveGroup"
  },
  {
    "comment": "Move tab to below group",
    "key": "ctrl+shift+alt+down",
    "command": "workbench.action.moveEditorToBelowGroup"
  },
  {
    "comment": "Join all group",
    "key": "ctrl+shift+alt+enter",
    "command": "workbench.action.joinAllGroups"
  },
  {
    "comment": "Increase tab size",
    "key": "ctrl+shift+alt+i",
    "command": "workbench.action.increaseViewSize"
  },
  {
    "comment": "Decrease tab size",
    "key": "ctrl+shift+alt+u",
    "command": "workbench.action.decreaseViewSize"
  },
  {
    "comment": "Reset tab size",
    "key": "ctrl+shift+alt+o",
    "command": "workbench.action.evenEditorWidths"
  },
  {
    "comment": "Move between tabs (all groups). Cuando se tiene foco en el terminal, es para moverse entre instancias del mismo",
    "key": "alt+ctrl+left",
    "command": "workbench.action.previousEditor",
    "when": "!isMac && editorFocus"
  },
  {
    "comment": "Move between tabs (all groups). Cuando se tiene foco en el terminal, es para moverse entre instancias del mismo",
    "key": "alt+cmd+left",
    "command": "workbench.action.previousEditor",
    "when": "isMac && editorFocus"
  },
  {
    "comment": "Move between tabs (all groups). Cuando se tiene foco en el terminal, es para moverse entre instancias del mismo",
    "key": "alt+ctrl+right",
    "command": "workbench.action.nextEditor",
    "when": "!isMac"
  },
  {
    "comment": "Move between tabs (all groups). Cuando se tiene foco en el terminal, es para moverse entre instancias del mismo",
    "key": "alt+cmd+right",
    "command": "workbench.action.nextEditor",
    "when": "isMac"
  },
  {
    "comment": "Remove editors on preview mode",
    "key": "alt+ctrl+right",
    "command": "workbench.action.closeActiveEditor",
    "when": "!isMac && !activeEditorIsNotPreview"
  },
  {
    "comment": "Remove editors on preview mode",
    "key": "alt+cmd+right",
    "command": "workbench.action.closeActiveEditor",
    "when": "isMac && !activeEditorIsNotPreview"
  },
  {
    "comment": "Remove editors on preview mode",
    "key": "alt+ctrl+left",
    "command": "workbench.action.closeActiveEditor",
    "when": "!isMac && !activeEditorIsNotPreview"
  },
  {
    "comment": "Remove editors on preview mode",
    "key": "alt+cmd+left",
    "command": "workbench.action.closeActiveEditor",
    "when": "isMac && !activeEditorIsNotPreview"
  },
  {
    "key": "cmd+shift+g",
    "command": "workbench.view.scm"
  },
  {
    "comment": "Open gitlens graph log",
    "key": "ctrl+shift+alt+g g",
    "command": "git-graph.view"
  },
  {
    "comment": "Open multi diff",
    "key": "ctrl+shift+alt+g d",
    "command": "git.viewChanges"
  },
  {
    "comment": "Close all diff editor",
    "key": "ctrl+shift+alt+g w",
    "command": "git.closeAllDiffEditors"
  },
  {
    "comment": "Git delete branch",
    "key": "ctrl+shift+alt+g r",
    "command": "git.deleteBranch"
  },
  {
    "comment": "Git checkout",
    "key": "ctrl+shift+alt+g c",
    "command": "git.checkout"
  },
  {
    "comment": "Git fetch all",
    "key": "ctrl+shift+alt+g f",
    "command": "git.fetchAll"
  },
  {
    "comment": "Git merge branch",
    "key": "ctrl+shift+alt+g m",
    "command": "git.merge"
  },
  {
    "comment": "Git stash current work",
    "key": "ctrl+shift+alt+g s",
    "command": "git.stash"
  },
  {
    "comment": "Git stash pop",
    "key": "ctrl+shift+alt+g p",
    "command": "git.stashPop"
  },
  {
    "comment": "Git pull",
    "key": "ctrl+shift+alt+g down",
    "command": "git.pull"
  },
  {
    "comment": "Git push",
    "key": "ctrl+shift+alt+g up",
    "command": "git.push"
  },
  {
    "comment": "Git push",
    "key": "ctrl+shift+alt+g t",
    "command": "timeline.focus"
  },
  {
    "comment": "When explorer focused, add a new file under the selected working directory",
    "key": "ctrl+n",
    "command": "explorer.newFile",
    "when": "!isMac && explorerViewletFocus"
  },
  {
    "key": "cmd+enter",
    "command": "explorer.openAndPassFocus",
    "when": "isMac && explorerViewletFocus"
  },
  {
    "comment": "When explorer focused, add a new file under the selected working directory",
    "key": "cmd+n",
    "command": "explorer.newFile",
    "when": "isMac && explorerViewletFocus"
  },
  {
    "comment": "When explorer focused, add a new file under the selected working directory",
    "key": "ctrl+d",
    "command": "explorer.newFolder",
    "when": "!isMac && explorerViewletFocus"
  },
  {
    "comment": "When explorer focused, add a new file under the selected working directory",
    "key": "cmd+d",
    "command": "explorer.newFolder",
    "when": "isMac && explorerViewletFocus"
  },
  {
    "key": "ctrl+shift+alt+b",
    "command": "workbench.action.toggleAuxiliaryBar"
  },
  {
    "key": "ctrl+e",
    "command": "workbench.action.showAllEditorsByMostRecentlyUsed",
    "when": "!isMac"
  },
  {
    "key": "cmd+e",
    "command": "workbench.action.showAllEditorsByMostRecentlyUsed",
    "when": "isMac"
  },
  {
    "key": "ctrl+o",
    "command": "workbench.action.openRecent"
  },
  {
    "key": "ctrl+r",
    "command": "-workbench.action.openRecent"
  },
  {
    "key": "ctrl+enter",
    "command": "-github.copilot.generate",
    "when": "editorTextFocus && github.copilot.activated && !inInteractiveInput && !interactiveEditorFocused"
  },
  {
    "key": "ctrl+shift+alt+z",
    "command": "workbench.action.toggleZenMode"
  },
  {
  "key": "ctrl+shift+alt+g a",
  "command": "git.commitAll",
  }
]
