# This is a demo config to showcase some of the most important commands.
# It is meant to be changed and configured, as it is intentionally kept sparse.
# For a (much) more advanced configuration example see my dotfiles:
# https://github.com/FelixKratz/dotfiles

PLUGIN_DIR="$CONFIG_DIR/plugins"
# TODO: UNify in constants shared settings like fonts, colors and paddings...

##### Bar Appearance #####
# Configuring the general appearance of the bar.
# These are only some of the options available. For all options see:
# https://felixkratz.github.io/SketchyBar/config/bar
# If you are looking for other colors, see the color picker:
# https://felixkratz.github.io/SketchyBar/config/tricks#color-picker

sketchybar --bar position=top height=40 blur_radius=30 color=0x40000000

##### Changing Defaults #####
# We now change some default values, which are applied to all further items.
# For a full list of all available item properties see:
# https://felixkratz.github.io/SketchyBar/config/items

default=(
  # Notch
  notch_display_height=40
  notch_width=1000
  y_offset=4
  padding_left=5
  padding_right=5
  icon.font="JetBrainsMono Nerd Font Mono:Bold:17.0"
  label.font="JetBrainsMono Nerd Font Mono:Bold:14.0"
  icon.color=0xffffffff
  label.color=0xffffffff
  icon.padding_left=4
  icon.padding_right=4
  label.padding_left=4
  label.padding_right=4
)
sketchybar --default "${default[@]}"

##### Adding Mission Control Space Indicators #####
# Let's add some mission control spaces:
# https://felixkratz.github.io/SketchyBar/config/components#space----associate-mission-control-spaces-with-an-item
# to indicate active and available mission control spaces.

# SPACE_ICONS=("1" "2" "3" "4" "5" "6" "7" "8" "9")
# for i in "${!SPACE_ICONS[@]}"
# do
#   sid="$(($i+1))"
#   space=(
#     space="$sid"
#     icon="${SPACE_ICONS[i]}"
#     icon.padding_left=7
#     icon.padding_right=7
#     background.color=0x40ffffff
#     background.corner_radius=5
#     background.height=25
#     label.drawing=off
#     script="$PLUGIN_DIR/space.sh"
#     click_script="aerospace workspace $sid"
#   )
#   sketchybar --add space space."$sid" left --set space."$sid" "${space[@]}"
# done

# Adding aerospace workspace change event subscription
sketchybar --add event aerospace_workspace_change


# Adding the aerospace plugin to handle workspace changes
# See: https://nikitabobko.github.io/AeroSpace/goodness#show-aerospace-workspaces-in-sketchybar
# Warning: Be careful that for coding i am using a monospace font, when pasting the icon do not put whites because the sketchybar will render nothing... 
SPACE_ICONS=("" "" "" "" "󰊻" "" "󱂛" "" "󰀶") 
for sid in $(aerospace list-workspaces --all); do  # I assume aerospace is configure with the same number of workspaces, for dynamically use $(aerospace list-workspaces --all)
    sketchybar --add item space.$sid left \
        --subscribe space.$sid aerospace_workspace_change \
        --set space.$sid \
        background.color=0x44ffffff \
        background.corner_radius=5 \
        background.height=20 \
        background.drawing=off \
        label="$sid" \
        label.font="JetBrainsMono Nerd Font Mono:Bold:14.0" \
        icon="${SPACE_ICONS[$(($sid-1))]}" \
        icon.padding_left=2 \
        icon.padding_right=2 \
        icon.font="JetBrainsMono Nerd Font Mono:Bold:24.0" \
        click_script="aerospace workspace $sid" \
        script="$CONFIG_DIR/plugins/aerospace.sh $sid"
done



##### Adding Left Items #####
# We add some regular items to the left side of the bar, where
# only the properties deviating from the current defaults need to be set

# sketchybar --add item chevron left \
#            --set chevron icon= label.drawing=off \
#            --add item front_app left \
#            --set front_app icon.drawing=off script="$PLUGIN_DIR/front_app.sh" \
#            --subscribe front_app front_app_switched

##### Adding Right Items #####
# In the same way as the left items we can add items to the right side.
# Additional position (e.g. center) are available, see:
# https://felixkratz.github.io/SketchyBar/config/items#adding-items-to-sketchybar

# Some items refresh on a fixed cycle, e.g. the clock runs its script once
# every 10s. Other items respond to events they subscribe to, e.g. the
# volume.sh script is only executed once an actual change in system audio
# volume is registered. More info about the event system can be found here:
# https://felixkratz.github.io/SketchyBar/config/events


sketchybar --add item clock right \
           --set clock update_freq=10 icon=  icon.font="JetBrainsMono Nerd Font Mono:Bold:24.0"  script="$PLUGIN_DIR/clock.sh" \
          #  --add item battery right \
          #  --set battery update_freq=120 script="$PLUGIN_DIR/battery.sh" \
          #  --subscribe battery system_woke power_source_change
          #  --add item keyboard right \
          #  --set keyboard update_freq=10 icon=  icon.font="JetBrainsMono Nerd Font Mono:Bold:24.0" script="$PLUGIN_DIR/keyboard_layout.sh" \
          #  --add item volume right \
          #  --set volume script="$PLUGIN_DIR/volume.sh" \
          #  --subscribe volume volume_change \

# Pomodoro timer
sketchybar --add item timer left \
           --set timer label="Start" \
                       label.font="JetBrainsMono Nerd Font Mono:Bold:14.0" \
                       icon=   \
                       icon.font="JetBrainsMono Nerd Font Mono:Bold:21.0" \
                       icon.color=0xFFF9E2AF \
                       icon.padding_right=2 \
                       background.drawing=off \
                       y_offset=5 \
                       script="$PLUGIN_DIR/pomodoro.sh" \
                       popup.background.corner_radius=5 \
                       popup.blur_radius=300 \
                       popup.background.color=0xFF1E1E2E \
                       popup.background.border_width=1 \
                       popup.background.border_color=0xFF45475A \
                       popup.align=center \
                       --subscribe timer mouse.clicked mouse.entered mouse.exited mouse.exited.global 


TIMER_ICONS=("󱑋" "󱑌" "󱑏" "󱑔")
i=0
for timer in "5" "10" "25" "50"; do
sketchybar --add item "timer.${timer}" popup.timer \
            --set "timer.${timer}" label="${timer}m" \
                        label.font="JetBrainsMono Nerd Font Mono:Bold:14.0" \
                        label.padding_right=10 \
                        icon="${TIMER_ICONS[$i]}" \
                        icon.font="JetBrainsMono Nerd Font Mono:Bold:24.0" \
                        icon.padding_left=6 \
                        background.color=0x44ffffff \
                        background.corner_radius=5 \
                        background.drawing=off \
                        click_script="$PLUGIN_DIR/pomodoro.sh $((timer * 60)); sketchybar -m --set timer popup.drawing=off"
i=$((i + 1))
done

##### Force all scripts to run the first time (never do this in a script) #####
sketchybar --update
