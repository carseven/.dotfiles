{
  // Telemetry
  "telemetry.telemetryLevel": "off",
  // Zen Mode
  "zenMode.fullScreen": false,
  "zenMode.centerLayout": false,
  "zenMode.showTabs": "none",
  // Window and layout appearance
  "window.title": "${dirty}${activeEditorShort}${separator}${rootName}",
  "window.commandCenter": false,
  "window.zoomLevel": 1,
  "window.newWindowDimensions": "inherit",
  "workbench.sideBar.location": "right",
  "workbench.activityBar.location": "top",
  "workbench.productIconTheme": "fluent-icons",
  "workbench.startupEditor": "none",
  "workbench.editor.empty.hint": "hidden",
  // Editor Tabs
  "workbench.editor.showTabs": "none",
  "workbench.layoutControl.enabled": false,
  "workbench.colorTheme": "Catppuccin Macchiato",
  "workbench.editor.enablePreview": false,
  "workbench.editor.enablePreviewFromQuickOpen": false,
  // File explorer tree
  "workbench.tree.renderIndentGuides": "none",
  "workbench.tree.indent": 24,
  "workbench.tree.enableStickyScroll": false,
  // Terminal
  "terminal.integrated.fontSize": 12,
  "terminal.integrated.lineHeight": 1,
  "terminal.integrated.fontFamily": "JetBrainsMono Nerd Font",
  "terminal.integrated.gpuAcceleration": "canvas",
  "terminal.integrated.cursorStyle": "line",
  "terminal.integrated.persistentSessionReviveProcess": "never",
  "terminal.integrated.tabs.enabled": false,
  "editor.insertSpaces": true,
  "editor.detectIndentation": true,
  "editor.inlineSuggest.enabled": true, // Show suggestions while writing (cntrl+space action)
  "editor.minimap.enabled": false,
  "editor.formatOnSaveMode": "file",
  "editor.formatOnSave": true,
  "editor.formatOnPaste": true,
  "editor.codeActionsOnSave": {
    "source.sortMembers": "always",
    "source.fixAll": "always"
  },
  "editor.fontFamily": "JetBrainsMono Nerd Font",
  "editor.fontSize": 15,
  "editor.lineHeight": 1.8,
  "editor.fontLigatures": true,
  "editor.linkedEditing": true, // HTML linked editing tags
  "editor.wordWrap": "on",
  "editor.renderWhitespace": "none",
  "editor.rulers": [
    120
  ], // Reduce code complexity and improve working on small screens. Show max char line
  "editor.stickyScroll.enabled": false,
  "editor.guides.indentation": false,
  "editor.cursorBlinking": "solid",
  // Line number reduce width
  "editor.glyphMargin": false,
  "editor.folding": true,
  "editor.lineNumbers": "on",
  "editor.lightbulb.enabled": "off",
  "editor.overviewRulerBorder": false,
  "editor.renderLineHighlight": "none",
  "editor.copyWithSyntaxHighlighting": false,
  "breadcrumbs.enabled": false,
  "explorer.confirmDelete": false,
  "explorer.confirmDragAndDrop": false,
  "explorer.compactFolders": false,
  "symbols.hidesExplorerArrows": false,
  "files.autoSave": "onFocusChange",
  "files.eol": "\n",
  // Programming languages specific config
  "[javascript]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode",
    "editor.tabSize": 4
  },
  "[html]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[css]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[typescript]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode",
    "editor.tabSize": 4
  },
  "[jsonc]": {
    "editor.defaultFormatter": "vscode.json-language-features"
  },
  // Git
  "scm.alwaysShowRepositories": true,
  "scm.diffDecorations": "gutter",
  "diffEditor.renderSideBySide": true,
  "git.suggestSmartCommit": false,
  "git.autofetch": true,
  "git.autofetchPeriod": 180,
  "git.enableSmartCommit": true,
  "git.confirmSync": false,
  "git.rebaseWhenSync": true,
  "search.useIgnoreFiles": false,
  "git.blame.editorDecoration.enabled": true,
  // Extensions
  "errorLens.enabledDiagnosticLevels": [
    "error",
    "warning"
  ],
  // VIM
  "vim.leader": "<Space>",
  "vim.hlsearch": true,
  "vim.normalModeKeyBindingsNonRecursive": [
    // NAVIGATION
    // switch b/w buffers
    {
      "before": [
        "<S-h>"
      ],
      "commands": [
        ":bprevious"
      ]
    },
    {
      "before": [
        "<S-l>"
      ],
      "commands": [
        ":bnext"
      ]
    },
    // splits
    {
      "before": [
        "leader",
        "v"
      ],
      "commands": [
        ":vsplit"
      ]
    },
    {
      "before": [
        "leader",
        "s"
      ],
      "commands": [
        ":split"
      ]
    },
    // panes
    {
      "before": [
        "leader",
        "h"
      ],
      "commands": [
        "workbench.action.focusLeftGroup"
      ]
    },
    {
      "before": [
        "leader",
        "j"
      ],
      "commands": [
        "workbench.action.focusBelowGroup"
      ]
    },
    {
      "before": [
        "leader",
        "k"
      ],
      "commands": [
        "workbench.action.focusAboveGroup"
      ]
    },
    {
      "before": [
        "leader",
        "l"
      ],
      "commands": [
        "workbench.action.focusRightGroup"
      ]
    },
    // NICE TO HAVE
    {
      "before": [
        "leader",
        "w"
      ],
      "commands": [
        ":w!"
      ]
    },
    {
      "before": [
        "leader",
        "q"
      ],
      "commands": [
        ":q!"
      ]
    },
    {
      "before": [
        "leader",
        "x"
      ],
      "commands": [
        ":x!"
      ]
    },
    {
      "before": [
        "[",
        "d"
      ],
      "commands": [
        "editor.action.marker.prev"
      ]
    },
    {
      "before": [
        "]",
        "d"
      ],
      "commands": [
        "editor.action.marker.next"
      ]
    },
    {
      "before": [
        "<leader>",
        "c",
        "a"
      ],
      "commands": [
        "editor.action.quickFix"
      ]
    },
    {
      "before": [
        "leader",
        "f"
      ],
      "commands": [
        "workbench.action.quickOpen"
      ]
    },
    {
      "before": [
        "leader",
        "p"
      ],
      "commands": [
        "editor.action.formatDocument"
      ]
    },
    {
      "before": [
        "g",
        "h"
      ],
      "commands": [
        "editor.action.showDefinitionPreviewHover"
      ]
    }
  ],
  "vim.visualModeKeyBindings": [
    // Stay in visual mode while indenting
    {
      "before": [
        "<"
      ],
      "commands": [
        "editor.action.outdentLines"
      ]
    },
    {
      "before": [
        ">"
      ],
      "commands": [
        "editor.action.indentLines"
      ]
    },
    // Move selected lines while staying in visual mode
    {
      "before": [
        "J"
      ],
      "commands": [
        "editor.action.moveLinesDownAction"
      ]
    },
    {
      "before": [
        "K"
      ],
      "commands": [
        "editor.action.moveLinesUpAction"
      ]
    },
    // toggle comment selection
    {
      "before": [
        "leader",
        "c"
      ],
      "commands": [
        "editor.action.commentLine"
      ]
    }
  ]
}